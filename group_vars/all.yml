# Ansible
# ansible_user: likejun@oppo.com

# InitConfiguration
token: b0f7b8.8d1767876297d85c
token_ttl: 24h
certificate_key: e6a2eb8581237ab72a4f494f30285ec12a9694d750b9785706a83bfcbbbd2204
## nodeRegistration
### kubeletExtraArgs
cgroup_driver: cgroupfs
network_plugin: cni
pod_infra_container_image: k8s.gcr.io/pause:3.2


# ClusterConfiguration
## common
kube_version: v1.18.3
cluster_name: test-cluster
certificates_dir: /etc/kubernetes/pki
image_repository: k8s.gcr.io
control_plane_endpoint: 192.168.202.21:6443
## network
service_subnet: "10.96.0.0/12"
pod_subnet: "10.244.0.0/16"
dns_domain: cluster.local
## etcd
etcd_image_repository: k8s.gcr.io
etcd_image_tag: 3.4.3-0
etcd_data_dir: /var/lib/etcd

#KubeletConfiguration
cluster_dns: 10.96.0.10
cluster_domain: cluster.local
max_pods: 110
node_status_update_frequency: 20s
kube_api_qps: 100
kube_api_burst: 150
pod_pids_limit: 15000
fail_swap_on: false

systemd_dir: /lib/systemd/system
system_env_dir: /etc/sysconfig
network_dir: /etc/kubernetes/network
kubeadm_config: /etc/kubernetes/kubeadm.conf
admin_config: /etc/kubernetes/admin.conf
kube_addon_dir: /etc/kubernetes/addon





# Network implementation('flannel', 'calico', 'canal')
network: calico

# Change this to an appropriate interface, preferably a private network.
# For example, on DigitalOcean, you would use eth1 as that is the default private network interface.
network_interface: "ens33"

enable_dashboard: no

# A list of insecure registries you might need to define
# insecure_registries: []
insecure_registries: ['gcr.io']



# Additional feature to install
additional_features:
  helm: false
  metallb: false
  healthcheck: false

# temporary directory used by additional features
tmp_dir: /tmp/kubeadm-ansible-files

