---
apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
certificateKey: "{{ certificate_key }}"
bootstrapTokens:
- token: "{{ token }}"
  description: "kubeadm bootstrap token"
  ttl: "{{ token_ttl }}"

#localAPIEndpoint:
nodeRegistration:
  name: "{{ inventory_hostname }}"
  kubeletExtraArgs:
    hostname-override: "{{ inventory_hostname }}"
    cgroup-driver: "{{ cgroup_driver }}"
    network-plugin: "{{ network_plugin }}"
    pod-infra-container-image: "{{ pod_infra_container_image }}"

---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
kubernetesVersion: "{{ kube_version }}"
controlPlaneEndpoint: "{{ control_plane_endpoint }}:6443"
certificatesDir: "{{ certificates_dir }}"
imageRepository: "{{ image_repository }}"
clusterName: "{{ cluster_name }}"

apiServer:
  extraArgs:
    advertise-address: "{{ inventory_hostname }}"
    authorization-mode: "Node,RBAC"
    insecure-port: "8080"
    enable-swagger-ui: "true"
    etcd-servers: "{{ etcd_servers }}"
    v: "4"
  certSANs:
    - "{{ control_plane_endpoint }}"
{% for master_ip in groups["master"] %}
    - "{{ master_ip}}"
{% endfor %}
  timeoutForControlPlane: 4m0s

controllerManager:
  extraArgs:
    v: "4"

#  extraVolumes:

scheduler:
  extraArgs:
  config:
    v: "4"

etcd:
  local:
    imageRepository: "k8s.gcr.io"
    imageTag: "3.4.3-0"
    dataDir: "/var/lib/etcd"
#    extraArgs:
    serverCertSANs:
{% for master_ip in groups["master"] %}
      - "{{ master_ip }}"
{% endfor %}
    peerCertSANs:
{% for master_ip in groups["master"] %}
      - "{{ master_ip }}"
{% endfor %}

networking:
  serviceSubnet: "{{ service_subnet }}"
  podSubnet: "{{ pod_subnet }}"
  dnsDomain: "{{ dns_domain }}"

---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
clusterDomain: "{{ cluster_domain }}"
clusterDNS:
  - "{{ cluster_dns }}"
maxPods: {{ max_pods }}
nodeStatusUpdateFrequency : {{ node_status_update_frequency }}
kubeAPIQPS: {{ kube_api_qps }}
kubeAPIBurst: {{ kube_api_burst }}
podPidsLimit: {{ pod_pids_limit }}
failSwapOn: {{ fail_swap_on }}
allowedUnsafeSysctls:
  - "kernel.msg*"
  - "kernel.shm*"
  - "kernel.sem"
  - "net.*"
  - "fs.mqueue.*"