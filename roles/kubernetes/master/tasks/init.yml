---
- name: Reset Kubernetes component
  shell: "kubeadm reset --force"
  register: reset_cluster

- name: Copy kubeadm conf to drop-in directory
  when: reset_cluster is succeeded
  template:
    src: init.config.j2
    dest: "{{ kubeadm_config }}"
    backup: true

- set_fact: initStat=1

- name: Init Kubernetes cluster
  when: reset_cluster is succeeded
  shell: kubeadm init --config {{ kubeadm_config }} --upload-certs --skip-phases addon
  register: init_cluster

- set_fact: initStat={{ init_cluster.rc }}

- name: Get ca cert hash
  when: init_cluster is succeeded
  shell: openssl x509 -pubkey -in {{ certificates_dir }}/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* /sha256:/'
  register: caCertHashes

- set_fact: caCertHashes={{ caCertHashes.stdout }}


- name: Create Kubernetes config directory
  when: init_cluster is succeeded
  file:
    path: ".kube/"
    state: directory

- name: Copy admin.conf to Home directory
  when: init_cluster is succeeded
  copy:
    src: "{{ admin_config }}"
    dest: ".kube/config"
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0755
    remote_src: true

